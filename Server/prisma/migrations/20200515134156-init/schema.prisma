datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String    @default(uuid()) @id
  mail                  String    @unique
  password              String
  username              String    @unique
  image                 String
  role                  Int
  projects              Project[] @relation("project_owner")
  collaborativeProjects Project[] @relation("project_collaborators", references: [id])

  @@map("users")
}

model Project {
  id            String     @default(uuid()) @id
  name          String
  image         String
  stepOne       StepOne?
  stepTwo       StepTwo?
  stepThree     StepThree?
  stepFour      StepFour?
  stepFive      StepFive?
  stepSix       StepSix?
  stepSeven     StepSeven?
  stepEight     StepEight?
  stepNine      StepNine?
  owner         User       @relation("project_owner", fields: [ownerId], references: [id])
  ownerId       String     @map("owner_id") @unique
  collaborators User[]     @relation("project_collaborators", references: [id])

  @@map("projects")
}

model StepOne {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  stepFive     String? @map("step_five")
  stepSix      String? @map("step_six")
  stepSeven    String? @map("step_seven")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  commentFive  String? @map("comment_five")
  commentSix   String? @map("comment_six")
  commentSeven String? @map("comment_seven")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_one")
}

model StepTwo {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_two")
}

model StepThree {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  stepFive     String? @map("step_five")
  stepSix      String? @map("step_six")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  commentFive  String? @map("comment_five")
  commentSix   String? @map("comment_six")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_three")
}

model StepFour {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  stepFive     String? @map("step_five")
  stepSix      String? @map("step_six")
  stepSeven    String? @map("step_seven")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  commentFive  String? @map("comment_five")
  commentSix   String? @map("comment_six")
  commentSeven String? @map("comment_seven")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_four")
}

model StepFive {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_five")
}

model StepSix {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_six")
}

model StepSeven {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  stepFour     String? @map("step_four")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  commentFour  String? @map("comment_four")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_seven")
}

model StepEight {
  id           String  @default(uuid()) @id
  stepOne      String? @map("step_one")
  stepTwo      String? @map("step_two")
  stepThree    String? @map("step_three")
  commentOne   String? @map("comment_one")
  commentTwo   String? @map("comment_two")
  commentThree String? @map("comment_three")
  project      Project @relation(fields: [projectId], references: [id])
  projectId    String  @map("project_id") @unique

  @@map("steps_eight")
}

model StepNine {
  id         String  @default(uuid()) @id
  stepOne    String? @map("step_one")
  stepTwo    String? @map("step_two")
  commentOne String? @map("comment_one")
  commentTwo String? @map("comment_two")
  project    Project @relation(fields: [projectId], references: [id])
  projectId  String  @map("project_id") @unique

  @@map("steps_nine")
}
